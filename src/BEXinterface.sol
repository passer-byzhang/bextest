
// SPDX-License-Identifier: UNLICENSED
// !! THIS FILE WAS AUTOGENERATED BY abi-to-sol v0.8.0. SEE SOURCE BELOW. !!
pragma solidity ^0.8.13;
pragma experimental ABIEncoderV2;

interface BEX {
    function addLiquidity(
        address pool,
        address receiver,
        address[] memory assetsIn,
        uint256[] memory amountsIn
    )
        external
        payable
        returns (
            address[] memory shares,
            uint256[] memory shareAmounts,
            address[] memory liquidity,
            uint256[] memory liquidityAmounts
        );

    function batchSwap(
        uint8 kind,
        IERC20DexModule.BatchSwapStep[] memory swaps,
        uint256 deadline
    )
        external
        payable
        returns (address[] memory assets, uint256[] memory amounts);

    function createPool(
        string memory name,
        address[] memory assetsIn,
        uint256[] memory amountsIn,
        string memory poolType,
        IERC20DexModule.PoolOptions memory options
    ) external payable returns (address);

    function getExchangeRate(
        address pool,
        address baseAsset,
        address quoteAsset
    ) external view returns (uint256);

    function getLiquidity(address pool)
        external
        view
        returns (address[] memory asset, uint256[] memory amounts);

    function getPoolName(address pool) external view returns (string memory);

    function getPoolOptions(address pool)
        external
        view
        returns (IERC20DexModule.PoolOptions memory);

    function getPreviewAddLiquidityNoSwap(
        address pool,
        address[] memory assets,
        uint256[] memory amounts
    )
        external
        view
        returns (
            address[] memory shares,
            uint256[] memory shareAmounts,
            address[] memory liqOut,
            uint256[] memory liquidityAmounts
        );

    function getPreviewAddLiquidityStaticPrice(
        address pool,
        address[] memory liquidity,
        uint256[] memory amounts
    )
        external
        view
        returns (
            address[] memory shares,
            uint256[] memory shareAmounts,
            address[] memory liqOut,
            uint256[] memory liquidityAmounts
        );

    function getPreviewBatchSwap(
        uint8 kind,
        IERC20DexModule.BatchSwapStep[] memory swaps
    ) external view returns (address asset, uint256 amount);

    function getPreviewBurnShares(
        address pool,
        address asset,
        uint256 amount
    ) external view returns (address[] memory assets, uint256[] memory amounts);

    function getPreviewSharesForLiquidity(
        address pool,
        address[] memory assets,
        uint256[] memory amounts
    )
        external
        view
        returns (
            address[] memory shares,
            uint256[] memory shareAmounts,
            address[] memory liquidity,
            uint256[] memory liquidityAmounts
        );

    function getPreviewSharesForSingleSidedLiquidityRequest(
        address pool,
        address asset,
        uint256 amount
    ) external view returns (address[] memory assets, uint256[] memory amounts);

    function getPreviewSwapExact(
        uint8 kind,
        address pool,
        address baseAsset,
        uint256 baseAssetAmount,
        address quoteAsset
    ) external view returns (address asset, uint256 amount);

    function getRemoveLiquidityExactAmountOut(
        address pool,
        address assetIn,
        uint256 assetAmount
    ) external view returns (address[] memory assets, uint256[] memory amounts);

    function getRemoveLiquidityOneSideOut(
        address pool,
        address assetOut,
        uint256 sharesIn
    ) external view returns (address[] memory assets, uint256[] memory amounts);

    function getTotalShares(address pool)
        external
        view
        returns (address[] memory assets, uint256[] memory amounts);

    function removeLiquidityBurningShares(
        address pool,
        address withdrawAddress,
        address assetIn,
        uint256 amountIn
    )
        external
        payable
        returns (address[] memory liquidity, uint256[] memory liquidityAmounts);

    function removeLiquidityExactAmount(
        address pool,
        address withdrawAddress,
        address assetOut,
        uint256 amountOut,
        address sharesIn,
        uint256 maxSharesIn
    )
        external
        payable
        returns (
            address[] memory shares,
            uint256[] memory shareAmounts,
            address[] memory liquidity,
            uint256[] memory liquidityAmounts
        );

    function swap(
        uint8 kind,
        address poolId,
        address assetIn,
        uint256 amountIn,
        address assetOut,
        uint256 amountOut,
        uint256 deadline
    )
        external
        payable
        returns (address[] memory assets, uint256[] memory amounts);
}

interface IERC20DexModule {
    struct BatchSwapStep {
        address poolId;
        address assetIn;
        uint256 amountIn;
        address assetOut;
        uint256 amountOut;
        bytes userData;
    }

    struct AssetWeight {
        address asset;
        uint256 weight;
    }

    struct PoolOptions {
        AssetWeight[] weights;
        uint256 swapFee;
    }
}

// THIS FILE WAS AUTOGENERATED FROM THE FOLLOWING ABI JSON:
/*
[{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address[]","name":"assetsIn","type":"address[]"},{"internalType":"uint256[]","name":"amountsIn","type":"uint256[]"}],"name":"addLiquidity","outputs":[{"internalType":"address[]","name":"shares","type":"address[]"},{"internalType":"uint256[]","name":"shareAmounts","type":"uint256[]"},{"internalType":"address[]","name":"liquidity","type":"address[]"},{"internalType":"uint256[]","name":"liquidityAmounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"enum IERC20DexModule.SwapKind","name":"kind","type":"uint8"},{"components":[{"internalType":"address","name":"poolId","type":"address"},{"internalType":"address","name":"assetIn","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address","name":"assetOut","type":"address"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IERC20DexModule.BatchSwapStep[]","name":"swaps","type":"tuple[]"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"batchSwap","outputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address[]","name":"assetsIn","type":"address[]"},{"internalType":"uint256[]","name":"amountsIn","type":"uint256[]"},{"internalType":"string","name":"poolType","type":"string"},{"components":[{"components":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"weight","type":"uint256"}],"internalType":"struct IERC20DexModule.AssetWeight[]","name":"weights","type":"tuple[]"},{"internalType":"uint256","name":"swapFee","type":"uint256"}],"internalType":"struct IERC20DexModule.PoolOptions","name":"options","type":"tuple"}],"name":"createPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"baseAsset","type":"address"},{"internalType":"address","name":"quoteAsset","type":"address"}],"name":"getExchangeRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getLiquidity","outputs":[{"internalType":"address[]","name":"asset","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getPoolName","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getPoolOptions","outputs":[{"components":[{"components":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"weight","type":"uint256"}],"internalType":"struct IERC20DexModule.AssetWeight[]","name":"weights","type":"tuple[]"},{"internalType":"uint256","name":"swapFee","type":"uint256"}],"internalType":"struct IERC20DexModule.PoolOptions","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"getPreviewAddLiquidityNoSwap","outputs":[{"internalType":"address[]","name":"shares","type":"address[]"},{"internalType":"uint256[]","name":"shareAmounts","type":"uint256[]"},{"internalType":"address[]","name":"liqOut","type":"address[]"},{"internalType":"uint256[]","name":"liquidityAmounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address[]","name":"liquidity","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"getPreviewAddLiquidityStaticPrice","outputs":[{"internalType":"address[]","name":"shares","type":"address[]"},{"internalType":"uint256[]","name":"shareAmounts","type":"uint256[]"},{"internalType":"address[]","name":"liqOut","type":"address[]"},{"internalType":"uint256[]","name":"liquidityAmounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IERC20DexModule.SwapKind","name":"kind","type":"uint8"},{"components":[{"internalType":"address","name":"poolId","type":"address"},{"internalType":"address","name":"assetIn","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address","name":"assetOut","type":"address"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IERC20DexModule.BatchSwapStep[]","name":"swaps","type":"tuple[]"}],"name":"getPreviewBatchSwap","outputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getPreviewBurnShares","outputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"getPreviewSharesForLiquidity","outputs":[{"internalType":"address[]","name":"shares","type":"address[]"},{"internalType":"uint256[]","name":"shareAmounts","type":"uint256[]"},{"internalType":"address[]","name":"liquidity","type":"address[]"},{"internalType":"uint256[]","name":"liquidityAmounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getPreviewSharesForSingleSidedLiquidityRequest","outputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IERC20DexModule.SwapKind","name":"kind","type":"uint8"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"baseAsset","type":"address"},{"internalType":"uint256","name":"baseAssetAmount","type":"uint256"},{"internalType":"address","name":"quoteAsset","type":"address"}],"name":"getPreviewSwapExact","outputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"assetIn","type":"address"},{"internalType":"uint256","name":"assetAmount","type":"uint256"}],"name":"getRemoveLiquidityExactAmountOut","outputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"assetOut","type":"address"},{"internalType":"uint256","name":"sharesIn","type":"uint256"}],"name":"getRemoveLiquidityOneSideOut","outputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getTotalShares","outputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"withdrawAddress","type":"address"},{"internalType":"address","name":"assetIn","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"}],"name":"removeLiquidityBurningShares","outputs":[{"internalType":"address[]","name":"liquidity","type":"address[]"},{"internalType":"uint256[]","name":"liquidityAmounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"withdrawAddress","type":"address"},{"internalType":"address","name":"assetOut","type":"address"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address","name":"sharesIn","type":"address"},{"internalType":"uint256","name":"maxSharesIn","type":"uint256"}],"name":"removeLiquidityExactAmount","outputs":[{"internalType":"address[]","name":"shares","type":"address[]"},{"internalType":"uint256[]","name":"shareAmounts","type":"uint256[]"},{"internalType":"address[]","name":"liquidity","type":"address[]"},{"internalType":"uint256[]","name":"liquidityAmounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"enum IERC20DexModule.SwapKind","name":"kind","type":"uint8"},{"internalType":"address","name":"poolId","type":"address"},{"internalType":"address","name":"assetIn","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address","name":"assetOut","type":"address"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swap","outputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"}]
*/
